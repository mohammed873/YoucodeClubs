import React , {useState , useEffect} from 'react';
import Head from 'next/head'
import styles from '../../../styles/clubs.module.css'
import axios from 'axios'
import EditIcon from '@material-ui/icons/Edit';
import DeleteIcon from '@material-ui/icons/Delete';
import { Button } from '@material-ui/core';
import TextField from '@material-ui/core/TextField';
import Dialog from '@material-ui/core/Dialog';
import DialogContent from '@material-ui/core/DialogContent';
import SaveIcon from '@material-ui/icons/Save';
import DialogTitle from '@material-ui/core/DialogTitle';
import ExploreIcon from '@material-ui/icons/Explore';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import { useRouter } from 'next/router'
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export default function Clubs() {

const router = useRouter()

//input states for post
const [name , setName] = useState('')
const [description , setDescription] = useState('')
const [picture , setPicture] = useState('')

// club states  
const [clubs , setClubs] = useState([])

// club to be eddited states  
const [edditedClub , setEdditedClub] = useState([])

//related to material ui dailog (post)
const [open, setOpen] = useState(false);

const handleClickOpen = () => {
    setOpen(true);
};
  
const handleClose = () => {
  setOpen(false);
}; 

//redirecting to the club activity page
const redirectToClubActivityPage = (id) => {
    router.push('/superadmin/clubActivities/' + id)
};

//related to material ui dailog (update)
const [openupdate, setOpenUpdate] = useState(false);

//close update dialog
const handleCloseUpdate = () => {
  setOpenUpdate(false);
}; 

//show update model and fetch data 
const handleClickOpenUpdate = async (id) => {
   await axios.get('http://localhost:3000/api/superAdmin/clubs/'+id)
   .then((res) =>{
    setEdditedClub(res.data.club)
     setOpenUpdate(true);
    
     //set states to the value to be updated
     setName(res.data.club.name)
     setDescription(res.data.club.description)
     setPicture(res.data.club.picture)
  
   }).catch((err) =>{
     console.log(err);
   })
 
};

//update a single club by id
const editClub = async (id ) => {
  const picture =  await pictureUpload()
  
  await axios.put('http://localhost:3000/api/superAdmin/clubs/' + id,{
    name ,
    description ,
    picture ,
  })
  .then((res) =>{
    emptyInputs()

    // empty states  
    setName('')
    setDescription('')
    setPicture('')

    toast.configure()
    toast.success(res.data.message)

    handleCloseUpdate()
    getAllClubs()
  }).catch((err) =>{
    toast.configure()
    toast.error(err.response.data.message)
  })
}

//empty all inputs after submmit
const emptyInputs = () => {
  document.querySelector('#name').value = ''
  document.querySelector('#description').value = ''
  
  // empty states  
  setName('')
  setDescription('')
  setPicture('')
}

//get all clubs 
const getAllClubs = async () => {
  await axios.get("http://localhost:3000/api/superAdmin/clubs")
  .then( res => {
      setClubs(res.data.clubs)
  }).catch(err =>{
      console.log(err);
  })
}

//delete on club by id 
const deleteClub = async ( id) => {
  await axios.delete("http://localhost:3000/api/superAdmin/clubs/" + id)
  .then( res => {
    toast.configure()
    toast.success(res.data.message)
    getAllClubs()
  }).catch(err =>{
      console.log(err);
  })
}

//adding new club
const addClub = async () => {
  const picture =  await pictureUpload()
  await axios.post('http://localhost:3000/api/superAdmin/clubs',{
   name,
   description ,
   picture 
 }).then(res =>{
  //close modal
  handleClose() 

  //fetch new admin
  getAllClubs()

  //empty inputs
  emptyInputs()
  
  //fire up success notifications
  toast.configure()
  toast.success(res.data.message)  

 }).catch(err =>{
  toast.configure()
  toast.error(err.response.data.message)
 })

}

//uploading image using cloudinary
const pictureUpload = async () => {

  const data = new FormData()
  data.append("file", picture)
  data.append("upload_preset", "youcodeClubs")
  data.append("cloud_name", "dtq13h9rg" )


  const res = await fetch("	https://api.cloudinary.com/v1_1/dtq13h9rg/image/upload",{
    method : "POST",
    body : data
  })
  const res2 = await res.json() 
  console.log(res2);
  return res2.url
}

useEffect(() => {
  getAllClubs()
}, []);

  return (
    <>
      <Head>
          <title>Create Next Ap</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
          <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"></link>
          <link
              rel="stylesheet"
              href="https://fonts.googleapis.com/icon?family=Material+Icons"
          />
      </Head>
      <main className={styles.superAdminClubMainContainer}>
         <div className={styles.headerContainer}>
             <h1>ALL CLUBS</h1>
             <Button variant="contained" onClick={handleClickOpen}>Add new club</Button>
         </div> 
        <div>
          <ul className={styles.cards}>
            {clubs.map(club => {
              return (
                <li >
                 <div className={styles.card}>
                   <img src={club.picture} className={styles.card__image} alt="club image" />
                   <div className={styles.card__overlay}>
                     <div className={styles.card__header}>
                       <svg className={styles.card__arc} xmlns="http://www.w3.org/2000/svg"><path /></svg> 
                       <div  className={styles.moreDetails}>
                        <Tooltip title="Explore Activities" >
                          <IconButton aria-label="Explore Activities" onClick={()=> redirectToClubActivityPage(club._id)}>
                            <ExploreIcon />   
                          </IconButton>
                        </Tooltip> 
                        <Tooltip title="Edit Activity" >
                          <IconButton aria-label="Explore Activities" className={styles.clubIcons}  onClick={ () => handleClickOpenUpdate(club._id)}>
                             <EditIcon />  
                          </IconButton>
                        </Tooltip>
                        <Tooltip title="Delete Activity" >
                          <IconButton aria-label="Explore Activities" className={styles.clubIcons} onClick={() => deleteClub(club._id)}>
                             <DeleteIcon /> 
                          </IconButton>
                        </Tooltip> 
                       </div>
                                       
                       <div className={styles.card__title}>
                         <h3>{club.name}</h3>            
                       </div>
                     </div>
                     <div className={styles.card__description}>
                        {club.description}
                     </div>
                     <div className={styles.iconsContainer}>
                        {/* <Tooltip title="Explore Activities" >
                          <IconButton aria-label="Explore Activities"   onClick={ () => handleClickOpenUpdate(club._id)}>
                             <EditIcon />  
                          </IconButton>
                        </Tooltip>
                        <Tooltip title="Explore Activities" >
                          <IconButton aria-label="Explore Activities"  onClick={() => deleteClub(club._id)}>
                             <DeleteIcon /> 
                          </IconButton>
                        </Tooltip>  */}
                     </div>
                     <br/>
                   </div>
                 </div>      
               </li>  
              )
            })}
          </ul>
        </div>

        {/* add club dialog */}
        <Dialog open={open} onClose={handleClose} aria-labelledby="form-dialog-title" fullWidth>
            <DialogTitle style={{backgroundColor: 'darkblue', color: 'white' , textAlign: 'center'}} id="form-dialog-title">Adding new Clubs</DialogTitle>
            <br/>
            <DialogContent>
                <TextField
                    id='name'
                    autoFocus
                    label="Club Name"
                    type="text"
                    variant="filled"
                    fullWidth
                    onChange={(e)=>{setName(e.target.value)}}
                />
                <br/> <br/>
                <TextField 
                   id='description'
                   label="description" 
                   type="text"
                   variant="filled"
                   fullWidth
                   multiline
                   rows={4}
                   onChange={(e)=>{setDescription(e.target.value)}}
                />
                <br/> <br/>
                <div class="mb-3">
                    <label for="formFile" class="form-label">Choose an Image</label>
                    <input class="form-control" type="file" id="formFile"  onChange={(e)=>setPicture(e.target.files[0])}/>
                </div>
                <Button
                    className={styles.saveBtn}
                    variant="contained"
                    color="primary"
                    size="large"
                    startIcon={<SaveIcon />}
                    onClick={addClub}
                >
                    Save
                </Button>
            </DialogContent>   
        </Dialog>


        {/* update club dialog */}
        <Dialog open={openupdate} onClose={handleCloseUpdate} aria-labelledby="form-dialog-title" fullWidth>
             <DialogTitle id="form-dialog-title" style={{backgroundColor: 'green', color: 'white' , textAlign: 'center'}}>update Club details</DialogTitle>
                <br/>
                <DialogContent>
                    <TextField
                        defaultValue={edditedClub.name}
                        id='name'
                        autoFocus
                        label="Club Name"
                        type="text"
                        variant="filled"
                        fullWidth
                        onChange={(e)=>{setName(e.target.value)}}
                    />
                    <br/> <br/>
                    <TextField 
                      defaultValue={edditedClub.description}
                      id='description'
                      label="description" 
                      type="text"
                      variant="filled"
                      fullWidth
                      multiline
                      rows={4}
                      onChange={(e)=>{setDescription(e.target.value)}}
                    />
                    <br/> <br/>
                    <div class="mb-3">
                      <label htmlFor="formFile" class="form-label">Choose an Image</label>
                      <input 
                        style={{width: '85%'}} 
                        class="form-control" type="file" id="formFile"  
                        onChange={(e)=>setPicture(e.target.files[0])}
                      />
                      <div className={styles.edditedPictureContainer}>
                           <img src={edditedClub.picture} alt="club pic" />
                      </div>
                    </div>
                    <Button
                        className={styles.editBtn}
                        variant="contained"
                        color="primary"
                        size="large"
                        startIcon={<EditIcon />}
                        onClick={()=>editClub(edditedClub._id)}
                    >
                        Edit
                    </Button>
              </DialogContent>   
        </Dialog>     
      </main>
    </>
  );
}
